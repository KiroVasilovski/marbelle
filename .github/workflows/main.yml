name: CI/CD

on:
  push:
    branches: [ main ]
    paths:
      - 'marbelle/backend/**'
      - 'marbelle/frontend/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'marbelle/backend/**'
      - 'marbelle/frontend/**'

jobs:
  #------------------------------------------------
  # Backend Job
  #------------------------------------------------
  backend:
    runs-on: ubuntu-latest
    environment: backend
    env:
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      DJANGO_SETTINGS_MODULE: ${{ vars.DJANGO_SETTINGS_MODULE }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12
          cache: 'pip'
          cache-dependency-path: 'marbelle/backend/requirements.txt'

      - name: Show DJANGO_SETTINGS_MODULE
        working-directory: ./marbelle/backend
        run: echo "DJANGO_SETTINGS_MODULE=$DJANGO_SETTINGS_MODULE"

      - name: Install dependencies
        working-directory: ./marbelle/backend
        run: pip install -r requirements.txt

      - name: Run linting
        working-directory: ./marbelle/backend
        run: ruff check .

      - name: Run system checks
        working-directory: ./marbelle/backend
        run: python manage.py check

      - name: Run tests
        working-directory: ./marbelle/backend
        run: python manage.py test

  #------------------------------------------------
  # Frontend Job
  #------------------------------------------------
  frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: marbelle/frontend/package-lock.json

      - name: Install dependencies
        working-directory: ./marbelle/frontend
        run: npm ci

      - name: Run linting
        working-directory: ./marbelle/frontend
        run: npm run lint

      - name: Build
        working-directory: ./marbelle/frontend
        run: npm run build

  #------------------------------------------------
  # Deployment Job
  #------------------------------------------------
  deploy:
    runs-on: ubuntu-latest
    needs: [backend, frontend]

    steps:
      - uses: actions/checkout@v4
      - name: Deploy to Render
        run: |
          echo "ðŸš€ Deploying to production..."
          # Example using a Render Deploy Hook
          # curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK_URL }}